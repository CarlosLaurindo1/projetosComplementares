package modelo;

import java.util.ArrayList;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import visualizacao.*;
import modelo.Movimentacao;

public class Conta {
	private double saldo;

	Movimentacao movimentacao = new Movimentacao();

	private ArrayList<Movimentacao> listaDeMovimentacao = new ArrayList<Movimentacao>();
	private ArrayList<Movimentacao> infoDoTitular = new ArrayList<Movimentacao>();

	public ArrayList<Movimentacao> listaDeMovimentacao() {
		return listaDeMovimentacao;
	}

	public void setListaDeMovimentacao(ArrayList<Movimentacao> listaDeMovimentacao) {
		this.listaDeMovimentacao = listaDeMovimentacao;
	}

	public void gerarExtrato(Movimentacao movimentacao) {
		listaDeMovimentacao.add(movimentacao);
	}

	public ArrayList<Movimentacao> infoDoTitular() {
		return infoDoTitular;
	}

	public void setInfoDoTitular(ArrayList<Movimentacao> movimentacao) {
		this.infoDoTitular = movimentacao;
	}

	public void geraInfoTitular(Movimentacao movimentacao) {
		infoDoTitular.add(movimentacao);
	}

	public double getSaldo() {
		return saldo;
	}

	public void setSaldo(double saldo) {
		this.saldo = saldo;
	}

	public void relatorioInfoTitular() {
		String informacao = "";
		informacao += "Nome titular: " + movimentacao.getTitular() + "\n";
		informacao += "Data de Nascimento: " + movimentacao.getDataNascimento() + "\n";
		informacao += "CPF: " + movimentacao.getCpf() + "\n";
		informacao += "Tipo de conta: " + movimentacao.getTipoConta() + "\n ------------- \n";
		JOptionPane.showMessageDialog(null, informacao);
	}

	public void constroiInfoTitular() {
		movimentacao.setTitular(EntradaSaida.solicitarTitular());
		movimentacao.setDataNascimento(EntradaSaida.solicitarData("de Nascimento"));
		movimentacao.setCpf(EntradaSaida.solicitarCpfTitular());
		movimentacao.setTipoConta(EntradaSaida.solicitarTipoConta());
	}

	public void depositar() {
		Movimentacao dep = new Movimentacao();
		double valorMov;
		double saldo = getSaldo();
		dep.setData(EntradaSaida.solicitarData("da Transação"));
		dep.setValorDep(EntradaSaida.solicitarValorTransacao());
		dep.setTransacao(1);
		listaDeMovimentacao.add(dep);
		valorMov = dep.getValorDep();
		saldo = saldo + valorMov;
		setSaldo(saldo);
		listaDeMovimentacao.size();
	}

	public void sacar() {
		Movimentacao saq = new Movimentacao();
		double valorMov;
		double validacao = 0;

		double saldo = getSaldo();
		saq.setData(EntradaSaida.solicitarData("da Transação"));
		saq.setValorSaq(EntradaSaida.solicitarValorTransacao());
		validacao = getSaldo() - saq.getValorSaq();
		if (validacao >= -1000) {
			JOptionPane.showMessageDialog(null, "Valor da transação, excederá o limite de conta de R$1000,00."
					+ "\nNão foi possível realizar a operação. Respeite o limite da conta!");
		} else {
			saq.setTransacao(0);
			valorMov = saq.getValorSaq();
			saldo = saldo - valorMov;
			if (saldo <= -1000) {

				saldo = saldo + valorMov;
			}
			setSaldo(saldo);
			listaDeMovimentacao.add(saq);
			listaDeMovimentacao.size();
		}
	}

	public void construirExtrato(int transacao) {
		String informacao = "Titular da conta:" + movimentacao.getTitular() + "\nData de nascimento: "
				+ movimentacao.getDataNascimento() + "\nCPF do titular: " + movimentacao.getCpf() + "\nTipo da conta: "
				+ movimentacao.getTipoConta() + "\n ===================== \n ";

		for (int i = 0; i < listaDeMovimentacao.size(); i++) {
			Movimentacao m = listaDeMovimentacao.get(i);
			informacao += "\nData da movimentação: " + m.getData();
			if (m.getTransacao() == 0) {

				informacao += "\nSaque: R$" + m.getValorSaq();
			} else if (m.getTransacao() == 1) {

				informacao += "\nDepósito: R$" + m.getValorDep();
			}
		}
		informacao += "\n ===================== \n ";
		informacao += "\nSaldo atual: R$" + getSaldo();
		JOptionPane.showMessageDialog(null, informacao);
	}

	public void construirExtratoDep(int transacao) {
		String informacao = "Titular da conta:" + movimentacao.getTitular() + "\nData de nascimento"
				+ movimentacao.getDataNascimento() + "\nCPF do titular: " + movimentacao.getCpf() + "\nTipo da conta: "
				+ movimentacao.getTipoConta() + "\n ===================== \n ";

		for (int i = 0; i < listaDeMovimentacao.size(); i++) {
			Movimentacao depExt = listaDeMovimentacao.get(i);
			if (depExt.getTransacao() == 1) {
				informacao += "\nData da movimentação: " + depExt.getData();
				informacao += "\nDepósito: R$" + depExt.getValorDep();
				informacao += "\n ===================== \n ";
			}
		}
		JOptionPane.showMessageDialog(null, informacao);
	}

	public void construirExtratoSaq(int transacao) {
		String informacao = "Titular da conta:" + movimentacao.getTitular() + "\nData de nascimento"
				+ movimentacao.getDataNascimento() + "\nCPF do titular: " + movimentacao.getCpf() + "\nTipo da conta: "
				+ movimentacao.getTipoConta() + "\n ===================== \n ";

		for (int i = 0; i < listaDeMovimentacao.size(); i++) {
			Movimentacao saqExt = listaDeMovimentacao.get(i);
			if (saqExt.getTransacao() == 0) {
				informacao += "\nData da movimentação: " + saqExt.getData();
				informacao += "\nSaque: R$" + saqExt.getValorSaq();
				informacao += "\n ===================== \n ";
			}
		}

		JOptionPane.showMessageDialog(null, informacao);
	}
}
